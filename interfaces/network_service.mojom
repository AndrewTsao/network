// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[DartPackage="mojo_services"]
module mojo;

import "mojo/public/interfaces/network/network_error.mojom";
import "network/interfaces/net_address.mojom";
import "network/interfaces/url_loader.mojom";

[ServiceName="mojo::NetworkService"]
interface NetworkService {
  CreateURLLoader(URLLoader& loader);

  // This is not implemented
  GetCookieStore(handle<message_pipe> cookie_store);

  // This is not implemented
  CreateWebSocket(handle<message_pipe> socket);

  // This is not implemented
  CreateTCPBoundSocket(NetAddress? local_address,
                       handle<message_pipe> bound_socket)
      => (NetworkError result, NetAddress? bound_to);

  // This is not implemented
  CreateTCPConnectedSocket(NetAddress remote_address,
                           handle<data_pipe_consumer> send_stream,
                           handle<data_pipe_producer> receive_stream,
                           handle<message_pipe> client_socket)
      => (NetworkError result,
          NetAddress? local_address);

  // This is not implemented
  CreateUDPSocket(handle<message_pipe> socket);

  // This is not implemented
  CreateHttpServer(NetAddress local_address,
                   handle<message_pipe> delegate)
      => (NetworkError result,
          NetAddress? bound_to);

  // This is not implemented
  RegisterURLLoaderInterceptor(handle<message_pipe> factory);

  // This is not implemented
  CreateHostResolver(handle<message_pipe> host_resolver);
};
